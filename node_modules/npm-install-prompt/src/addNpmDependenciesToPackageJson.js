export async function addNpmDependenciesToPackageJson({dependencies, devDependencies, reject}) {

  //region Imports
  const {logHeading, padlog, log} = require('./util/logging')
  const {promisify} = require('bluebird')
  const modifyPackageJson = require('./util/modifyPackageJson')
  const _ = require('lodash')
  //endregion

  function convertToPackageJsonDepFormat(deps) {
    let o = {}
    deps.forEach(([name, version]) => o[name] = version || '*')
    return o
  }

  if (Array.isArray(dependencies)) dependencies = convertToPackageJsonDepFormat(dependencies)
  if (Array.isArray(devDependencies)) devDependencies = convertToPackageJsonDepFormat(devDependencies)

  await promisify(modifyPackageJson)(json => {
    json.dependencies = _.merge({}, json.dependencies, dependencies)
    json.devDependencies = _.merge({}, json.devDependencies, devDependencies)
    reject.dependencies.forEach(d => {delete json.dependencies[d]})
    reject.devDependencies.forEach(d => {delete json.devDependencies[d]})
    return json
  })

}
