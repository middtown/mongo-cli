'use strict';

var _stringify = require('babel-runtime/core-js/json/stringify');

var _stringify2 = _interopRequireDefault(_stringify);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// TODO(vjpr): Use https://github.com/slushjs/gulp-conflict/blob/master/index.js

module.exports = function (fn, done) {

  //region Imports
  var jsondiffpatch = require('jsondiffpatch');

  var _require = require('inquirer-promise');

  var confirm = _require.confirm;

  var fs = require('fs');
  var cwd = require('cwd');
  var _ = require('lodash');
  var chalk = require('chalk');
  var _console = console;
  var log = _console.log;
  //endregion

  var pjsonPath = cwd('package.json');
  var oldJson = JSON.parse(fs.readFileSync(pjsonPath, 'utf8')); // Don't use `require` because it caches!
  var json = _.cloneDeep(oldJson);
  json = fn(json);
  var delta = jsondiffpatch.diff(oldJson, json);
  if (!delta) {
    log('Skipping ' + chalk.magenta('package.json') + ' (already up to date)');
    return done();
  }
  log('Proposed changes to:', pjsonPath);
  log();
  jsondiffpatch.console.log(delta);
  log();
  confirm('Write?').then(function (yes) {
    if (!yes) return done('Cancelled.');
    fs.writeFileSync(pjsonPath, (0, _stringify2.default)(json, null, 2));
    log(chalk.green('Wrote file.'));
    done();
  });
};
//# sourceMappingURL=modifyPackageJson.js.map
